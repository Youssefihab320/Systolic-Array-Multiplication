vsim -c -do "run -all; quit" work.systolic_array_tb file.log
# vsim -c -do "run -all; quit" work.systolic_array_tb 
# Start time: 19:18:06 on Jul 27,2025
# Loading sv_std.std
# Loading work.systolic_array_tb
# Loading work.systolic_array
# Loading work.processing_element
# OpenFile file.log
# run -all
# 
# --- Starting 3x3 Matrix Multiplication Test Case 1 ---
# Matrix A:
#   [1, 2, 3]
#   [4, 5, 6]
#   [7, 8, 9]
# Matrix B:
#   [9, 8, 7]
#   [6, 5, 4]
#   [3, 2, 1]
# Expected Result:
#   [30, 24, 18]
#   [84, 69, 54]
#   [138, 114, 90]
# Time 0: valid_out = 0
# 
# Applying inputs for Test Case 1:
#   Cycle 0: A_col = [1, 4, 7], B_row = [9, 8, 7]
#   Cycle 1: A_col = [2, 5, 8], B_row = [6, 5, 4]
#   Cycle 2: A_col = [3, 6, 9], B_row = [3, 2, 1]
# 
# Input complete for Test Case 1, waiting for results...
# Time 85000: valid_out = 1
# Time 95000: valid_out_tb detected - Capturing row 0
#   Element[0] = 30
#   Element[1] = 24
#   Element[2] = 18
# Time 105000: valid_out_tb detected - Capturing row 1
#   Element[0] = 84
#   Element[1] = 69
#   Element[2] = 54
# Time 115000: valid_out_tb detected - Capturing row 2
#   Element[0] = 138
#   Element[1] = 114
#   Element[2] = 90
# 
# Full Matrix C (Test Case 1):
#   Row 0: [30, 24, 18]
#   Row 1: [84, 69, 54]
#   Row 2: [138, 114, 90]
# 
# PASS: All outputs match expected for Test Case 1!
# Time 135000: valid_out = 0
# 
# --- Starting 3x3 Matrix Multiplication Test Case 2 ---
# Matrix A:
#   [2, 3, 4]
#   [5, 6, 7]
#   [8, 9, 10]
# Matrix B:
#   [1, 2, 3]
#   [4, 5, 6]
#   [7, 8, 9]
# Expected Result:
#   [42,  51,  60]
#   [78,  96, 114]
#   [114, 141, 168]
# 
# Applying inputs for Test Case 2:
#   Cycle 0: A_col = [2, 5, 8], B_row = [1, 2, 3]
#   Cycle 1: A_col = [3, 6, 9], B_row = [4, 5, 6]
#   Cycle 2: A_col = [4, 7, 10], B_row = [7, 8, 9]
# 
# Input complete for Test Case 2, waiting for results...
# Time 255000: valid_out = 1
# Time 265000: valid_out_tb detected - Capturing row 0
#   Element[0] = 42
#   Element[1] = 51
#   Element[2] = 60
# Time 275000: valid_out_tb detected - Capturing row 1
#   Element[0] = 78
#   Element[1] = 96
#   Element[2] = 114
# Time 285000: valid_out_tb detected - Capturing row 2
#   Element[0] = 114
#   Element[1] = 141
#   Element[2] = 168
# 
# Full Matrix C (Test Case 2):
#   Row 0: [42, 51, 60]
#   Row 1: [78, 96, 114]
#   Row 2: [114, 141, 168]
# 
# PASS: All outputs match expected for Test Case 2!
# 
# --- Simulation Complete ---
# ** Note: $stop    : D:/Digital Design/StM Task/Done/systolic_array_tb.sv(236)
#    Time: 305 ns  Iteration: 0  Instance: /systolic_array_tb
# Break in Module systolic_array_tb at D:/Digital Design/StM Task/Done/systolic_array_tb.sv line 236
#  quit
# End time: 19:20:07 on Jul 27,2025, Elapsed time: 0:02:01
# Errors: 0, Warnings: 0
